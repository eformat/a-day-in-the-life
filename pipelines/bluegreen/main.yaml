#   ansible-playbook -vv main.yaml --extra-vars token=$(oc whoami -t)
#   ansible-playbook -vv main.yaml --tags 'build' --extra-vars token=$(oc whoami -t)
---
- hosts: localhost
  vars:
    ocp_project: bluegreen
  tasks:
    - name: Locate oc client
      find:
        paths: "{{ ansible_env['PATH'].split(':') }}"
        patterns: 'oc'
      register: oc_cmd

    - set_fact:
        oc: "{{ oc_cmd.files[0]['path'] }}"
      when: oc_cmd.matched != 0

    - name: create openshift project "{{ocp_project}}"
      command: >-
        {{oc}} new-project {{ocp_project}} --display-name='Blue Green Deployments' --description='Blue Green Deployments'
      register: command_result
      failed_when: "command_result.rc != 0 and 'AlreadyExists' not in command_result.stderr"

    - name: create blue openshift application
      command: >-
        {{oc}} new-app 'https://github.com/devops-with-openshift/bluegreen#master' --name=blue
      register: command_result
      failed_when: "command_result.rc != 0 and 'already exists' not in command_result.stderr"

    - name: create green openshift application
      command: >-
        {{oc}} new-app https://github.com/devops-with-openshift/bluegreen#green --name=green
      register: command_result
      failed_when: "command_result.rc != 0 and 'already exists' not in command_result.stderr"

    - name: create bluegreen pipeline
      command: >-
        {{oc}} create -f https://raw.githubusercontent.com/eformat/bluegreen/master/bluegreen-pipeline.yaml
      register: command_result
      failed_when: "command_result.rc != 0 and 'already exists' not in command_result.stderr"

    - name: create bluegreen route
      command: >-
        {{oc}} expose service blue --name=bluegreen
      register: command_result
      failed_when: "command_result.rc != 0 and 'already exists' not in command_result.stderr"

    - name: create blue route
      command: >-
        {{oc}} expose service blue --name=blue
      register: command_result
      failed_when: "command_result.rc != 0 and 'already exists' not in command_result.stderr"

    - name: create green route
      command: >-
        {{oc}} expose service green --name=green
      register: command_result
      failed_when: "command_result.rc != 0 and 'already exists' not in command_result.stderr"

    - name: make bluegreen route primary in ux
      command: >-
        {{oc}} annotate route bluegreen console.alpha.openshift.io/overview-app-route=true
      register: command_result
      failed_when: "command_result.rc != 0"

    - name: start pipeline build
      command: >-
        {{oc}} start-build bluegreen-pipeline
      register: command_result
