#   ansible-playbook -vv main.yaml --extra-vars token=$(oc whoami -t)
#   ansible-playbook -vv main.yaml --tags 'build' --extra-vars token=$(oc whoami -t)
---
- hosts: localhost
  vars:
    ocp_domain: apps.bar.com
    ocp_registry: docker-registry.default.svc:5000
  tasks:
    - name: Locate oc client
      find:
        paths: "{{ ansible_env['PATH'].split(':') }}"
        patterns: 'oc'
      register: oc_cmd

    - set_fact:
        oc: "{{ oc_cmd.files[0]['path'] }}"
      when: oc_cmd.matched != 0

    - name: create openshift project cicd
      command: >-
        {{oc}} new-project cicd --display-name='CICD Jenkins' --description='CICD Jenkins'
      register: command_result
      failed_when: "command_result.rc != 0 and 'AlreadyExists' not in command_result.stderr"

    - name: create openshift project development
      command: >-
        {{oc}} new-project development --display-name='MyApp Development' --description='MyApp Development'
      register: command_result
      failed_when: "command_result.rc != 0 and 'AlreadyExists' not in command_result.stderr"

    - name: create openshift project testing
      command: >-
        {{oc}} new-project testing --display-name='MyApp Testing' --description='MyApp Testing'
      register: command_result
      failed_when: "command_result.rc != 0 and 'AlreadyExists' not in command_result.stderr"

    - name: create openshift project production
      command: >-
        {{oc}} new-project production --display-name='MyApp Production' --description='MyApp Production'
      register: command_result
      failed_when: "command_result.rc != 0 and 'AlreadyExists' not in command_result.stderr"
      
    - name: add jenkins permission to development project
      command: >-
        {{oc}} policy add-role-to-user edit system:serviceaccount:cicd:jenkins -n development
      register: command_result

    - name: add jenkins permission to testing project
      command: >-
        {{oc}} policy add-role-to-user edit system:serviceaccount:cicd:jenkins -n testing
      register: command_result

    - name: add jenkins permission to production project
      command: >-
        {{oc}} policy add-role-to-user edit system:serviceaccount:cicd:jenkins -n production
      register: command_result
      
    - name: allow testing service accout to pull from development
      command: >-
        {{oc}} policy add-role-to-group system:image-puller system:serviceaccounts:testing -n development
      register: command_result
      
    - name: allow production service accout to pull from development
      command: >-
        {{oc}} policy add-role-to-group system:image-puller system:serviceaccounts:production -n development
      register: command_result

    - name: create jenkins openshift application
      command: >-
        {{oc}} new-app -n cicd --template=jenkins-persistent -p JENKINS_IMAGE_STREAM_TAG=jenkins-2-centos7:latest -p NAMESPACE=openshift -p MEMORY_LIMIT=2048Mi -p ENABLE_OAUTH=true
      register: command_result
      failed_when: "command_result.rc != 0 and 'already exists' not in command_result.stderr"
      
    - name: create jenkins pipeline
      command: >-
        {{oc}} create -n cicd -f https://raw.githubusercontent.com/devops-with-openshift/pipeline-configs/master/pipeline.yaml
      register: command_result
      failed_when: "command_result.rc != 0 and 'already exists' not in command_result.stderr"

    - name: create development openshift application
      command: >-
        {{oc}} new-app openshift/php:5.6~https://github.com/eformat/cotd.git#master --name=myapp -n development
      register: command_result
      failed_when: "command_result.rc != 0 and 'already exists' not in command_result.stderr"
      
    - name: create development route
      command: >-
        {{oc}} expose service myapp --hostname=cotd-development.{{ocp_domain}} --name=myapp -n development
      register: command_result
      failed_when: "command_result.rc != 0 and 'already exists' not in command_result.stderr"

    - name: create testing deployment configuration
      command: >-
        {{oc}} create dc myapp --image={{ocp_registry}}/development/myapp:promoteQA -n testing
      register: command_result
      failed_when: "command_result.rc != 0 and 'already exists' not in command_result.stderr"

    - name: set image pull policy testing
      command: >-
        oc patch dc/myapp -p '{"spec":{"template":{"spec":{"containers":[{"name":"default-container","imagePullPolicy":"Always"}]}}}}' -n testing
      register: command_result
      failed_when: "command_result.rc != 0 and 'already exists' not in command_result.stderr"

    - name: create testing service
      command: >-
        {{oc}} expose dc myapp --port=8080 -n testing
      register: command_result
      failed_when: "command_result.rc != 0 and 'already exists' not in command_result.stderr"

    - name: create testing route
      command: >-
        {{oc}} expose service myapp --hostname=cotd-testing.{{ocp_domain}} --name=myapp -n testing
      register: command_result
      failed_when: "command_result.rc != 0 and 'already exists' not in command_result.stderr"

    - name: create production deployment configuration
      command: >-
        {{oc}} create dc myapp --image={{ocp_registry}}/development/myapp:promotePRD -n production
      register: command_result
      failed_when: "command_result.rc != 0 and 'already exists' not in command_result.stderr"

    - name: set image pull policy production
      command: >-
        oc patch dc/myapp -p '{"spec":{"template":{"spec":{"containers":[{"name":"default-container","imagePullPolicy":"Always"}]}}}}' -n production
      register: command_result
      failed_when: "command_result.rc != 0 and 'already exists' not in command_result.stderr"

    - name: create production service
      command: >-
        {{oc}} expose dc myapp --port=8080 -n production
      register: command_result
      failed_when: "command_result.rc != 0 and 'already exists' not in command_result.stderr"

    - name: create production route
      command: >-
        {{oc}} expose service myapp --hostname=cotd-production.{{ocp_domain}} --name=myapp -n production
      register: command_result
      failed_when: "command_result.rc != 0 and 'already exists' not in command_result.stderr"    
      
    - name: start pipeline build
      command: >-
        {{oc}} start-build pipeline -n cicd
      register: command_result
      failed_when: "command_result.rc != 0 and 'already exists' not in command_result.stderr"
