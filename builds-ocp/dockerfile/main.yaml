# dockerfile build demo example
#   ansible-playbook -vv main.yaml
# rebuild existing app from source only
#   ansible-playbook -vv main.yaml --tags 'build'
#
# test
#  curl http://dockerfile-welcome.192.168.137.2.xip.io/
#
---
- hosts: localhost
  vars:
    ocp_user: developer
    ocp_pwd: developer
    ocp_server: 192.168.137.2:8443
    ocp_project: dockerfile
  tasks:
    - name: check openshift log in
      shell: oc whoami
      ignore_errors: yes
      register: oc_whoami
      
    - name: login to openshift
      shell: "oc login -u {{ocp_user}} -p {{ocp_pwd}} --server=https://{{ocp_server}} --insecure-skip-tls-verify=true"
      tags: build
      when: ocp_user not in oc_whoami.stdout
      
    - name: create openshift project
      shell: "oc new-project {{ocp_project}} --display-name='Dockerfile Demo' --description='Dockerfile Demo'"
      register: command_result
      failed_when: "command_result.rc != 0 and 'AlreadyExists' not in command_result.stderr"

    - name: build openshift ops image layer
      shell: "oc new-build --code=https://github.com/devops-with-openshift/welcome --context-dir=sh --strategy=docker --name ops"
      register: command_result
      failed_when: "command_result.rc != 0 and 'already exists' not in command_result.stderr"

    - name: create openshift application layer build
      shell: "oc new-app --context-dir=foo --name={{ocp_project}} https://github.com/eformat/welcome --strategy=docker"
      register: command_result        
      failed_when: "command_result.rc != 0 and 'already exists' not in command_result.stderr"
      
    - name: create openshift route
      shell: "oc expose svc {{ocp_project}}"
      register: command_result        
      failed_when: "command_result.rc != 0 and 'already exists' not in command_result.stderr"
